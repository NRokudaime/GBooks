//
//  FeedListPresenter.swift
//  Feed
//
//  Created by Antonov Vladislav on 20/11/2019.
//  Copyright (c) 2019 Antonov Vladislav. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import Foundation

protocol FeedListPresentationLogic: CommonPresentationLogic {
	func presentFeedList(response: FeedList.Something.Response)
}

final class FeedListPresenter: FeedListPresentationLogic {
	weak var viewController: FeedListDisplayLogic?
		
	func presentFeedList(response: FeedList.Something.Response) {
		let viewModels: [TableViewCellAnyModel] = response.items.map(networkModelToViewModel(_:))
		let viewModel = FeedList.Something.ViewModel(viewModels: viewModels)
		viewController?.displaySomething(viewModel: viewModel)
	}
	
	private func networkModelToViewModel(_ item: Item) -> TableViewCellAnyModel {
		var viewModel = FeedListItemViewModel(title: item.volumeInfo.title, subtitle: item.volumeInfo.description, link: item.volumeInfo.canonicalVolumeLink)
		viewModel.action = { [viewController] in
			guard let url = URL(string: viewModel.link) else { return }
			viewController?.displayBook(url: url)
		}
		return viewModel
	}
}

extension FeedListPresenter: DisplayLogicHolder {
	var displayLogic: CommonDisplayLogic? {
		return viewController
	}
}
